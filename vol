package projet;
import java.util.*;
public class vol {
	private Date heure_arrivee;
	private Date heure_depart;
	private int codevol;
	private String ville_arrivee;
	private String ville_depart;
	private ArrayList<Avion> ListAvion;
	private ArrayList<Pilote> ListPilote;
	private ArrayList<compagnie> ListCompagnie;
	private HashMap<vol,Avion> Vol;
private vol() {
	
}
private vol(Date heure_arrivee,Date heure_depart,String ville_arrivee,String ville_depart,int code,ArrayList<Avion> ListAvion,ArrayList<Pilote> ListPilote,ArrayList<compagnie> ListCompagnie,HashMap<vol,Avion> Vol) {
	this.heure_arrivee=heure_arrivee;
	this.heure_depart=heure_depart;
	this.codevol=code;
	this.ville_depart=ville_depart;
	this.ville_arrivee=ville_arrivee;
	this.ListAvion=ListAvion;
	this.ListPilote=ListPilote;
	this.ListCompagnie=ListCompagnie;
	this.Vol=Vol;
}
public Date getHeure_arrivee() {
	return heure_arrivee;
}
public void setHeure_arrivee(Date heure_arrivee) {
	this.heure_arrivee = heure_arrivee;
}
public Date getHeure_depart() {
	return heure_depart;
}
public void setHeure_depart(Date heure_depart) {
	this.heure_depart = heure_depart;
}
public int getCodevol() {
	return codevol;
}
public void setCodevol(int codevol) {
	this.codevol = codevol;
}
public String getVille_arrivee() {
	return ville_arrivee;
}
public void setVille_arrivee(String ville_arrivee) {
	this.ville_arrivee = ville_arrivee;
}
public String getVille_depart() {
	return ville_depart;
}
public void setVille_depart(String ville_depart) {
	this.ville_depart = ville_depart;
}
@Override
public String toString() {
	return "vol [heure_arrivee=" + heure_arrivee + ", heure_depart=" + heure_depart + ", codevol=" + codevol
			+ ", ville_arrivee=" + ville_arrivee + ", ville_depart=" + ville_depart + "]";
}

public Avion rechercherAvion(int codeavion) {
	for (int i=0;i<this.ListAvion.size();i++) {
		if(this.ListAvion.get(i).getCodeavion()==codeavion) {
			return this.ListAvion.get(i);
		}
	}
	return null;
	}

public Pilote rechercherPilote(int codepilote) {
	for (int i=0;i<this.ListPilote.size();i++) {
		if(this.ListPilote.get(i).getcode()==codepilote) {
			return this.ListPilote.get(i);
		}
	}
	return null;
	}
public compagnie rechercherCompagnie(int codecompagnie) {
	for (int i=0;i<this.ListCompagnie.size();i++) {
		if(this.ListCompagnie.get(i).getCodecompagnie()==codecompagnie) {
			return this.ListCompagnie.get(i);
		}
	}
	return null;
	}
public void ajouterAvion(Avion avion) {
	this.ListAvion.add(avion);
	
}
public void ajouterPilote(Pilote pil) {
	try {
		pil.verification(pil.getcode());
	    this.ListPilote.add(pil);
}
	catch(Exception e) {
		e.printStackTrace();
		
	}
}
public void ajoutercompagnie(compagnie com) {
	this.ListCompagnie.add(com);
}

public <V,A> A getAvion(V v, HashMap<V,A> map) {

		return map.get(v);

}
public void ajouterVol(vol v,Avion av) {
	Vol.put(v, av);
}















}









